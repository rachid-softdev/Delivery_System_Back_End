# ===============================
# SERVER
# ===============================
server.address=${SPRING_HOST}
server.port=${SPRING_PORT}

# ===============================
# DEBUG
# ===============================
server.error.include-stacktrace=ALWAYS
server.error.include-exception=true
# Disabling the Whitelabel Error Page
server.error.whitelabel.enabled=false
server.error.path=/error
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration

logging.level.org.springframework=ERROR
logging.level.org.hibernate=ERROR

# ===============================
# DOCUMENTATION
# ===============================
#springdoc.api-docs.enabled=false
#springdoc.swagger-ui.enabled=false
springdoc.swagger-ui.path=/drivers-documentation
springdoc.api-docs.path=/drivers-api-docs
springdoc.packages-to-scan=fr.univrouen.deliverysystem
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.filter=true


# ===============================
# DATABASE
# ===============================
# Use the .env without an extension as a .properties file
spring.config.import=optional:file:.env[.properties]
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# Fix Postgres JPA Error:
# Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true


# spring.datasource.hikari.connection-timeout=30000
# spring.datasource.hikari.maximum-pool-size=10
# spring.datasource.hikari.minimum-idle=5
# spring.datasource.hikari.idle-timeout=600000
# spring.datasource.hikari.max-lifetime=1800000
# spring.datasource.hikari.pool-name=collection-pool

# Other Properties

#spring.datasource.hikari.allow-pool-suspension
#spring.datasource.hikari.auto-commit
#spring.datasource.hikari.catalog
#spring.datasource.hikari.connection-init-sql
#spring.datasource.hikari.connection-test-query
#spring.datasource.hikari.data-source-class-name
#spring.datasource.hikari.data-source-j-n-d-i
#spring.datasource.hikari.data-source-properties
#spring.datasource.hikari.driver-class-name
#spring.datasource.hikari.exception-override-class-name
#spring.datasource.hikari.health-check-properties
#spring.datasource.hikari.initialization-fail-timeout
#spring.datasource.hikari.isolate-internal-queries
#spring.datasource.hikari.jdbc-url
#spring.datasource.hikari.keepalive-time
#spring.datasource.hikari.leak-detection-threshold
#spring.datasource.hikari.login-timeout
#spring.datasource.hikari.metrics-tracker-factory
#spring.datasource.hikari.password
#spring.datasource.hikari.read-only
#spring.datasource.hikari.register-mbeans
#spring.datasource.hikari.scheduled-executor
#spring.datasource.hikari.schema
#spring.datasource.hikari.transaction-isolation
#spring.datasource.hikari.username
#spring.datasource.hikari.validation-timeout


# ===============================
# Pagination
# https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html
# CTRL+F : spring.data.web
# ===============================
# Default page size
spring.data.web.pageable.default-page-size=20
# Maximum page size to be accepted
spring.data.web.pageable.max-page-size=2000
# Whether to expose and assume 1-based page number indexes. Defaults to "false", meaning a page number of 0 in the request equals the first page.
spring.data.web.pageable.one-indexed-parameters=false
# Page index parameter name
spring.data.web.pageable.page-parameter=page
# General prefix to be prepended to the page number and page size parameters
spring.data.web.pageable.prefix=
# Delimiter to be used between the qualifier and the actual page number and size properties
spring.data.web.pageable.qualifier-delimiter=_
# Page size parameter name
spring.data.web.pageable.size-parameter=size
# Sort parameter
spring.data.web.sort.sort-parameter=sort

# ===============================
# Keycloak
# ===============================
# keycloak.enabled=${KEYCLOAK_ENABLED}
keycloak.enabled=false

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/api/delivery_system
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
jwt.auth.converter.resource-id=delivery_system-rest-api
jwt.auth.converter.principle-attribute=preferred_username
